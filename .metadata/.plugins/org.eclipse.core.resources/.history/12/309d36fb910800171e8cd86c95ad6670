package org.eclipse.jdt.internal.ui.search;

import org.eclipse.swt.widgets.Composite;
import org.eclipse.jface.dialogs.IDialogSettings;
import org.eclipse.ui.IWorkingSet;
import org.eclipse.search.ui.ISearchPageContainer;
import org.eclipse.jdt.core.IJavaElement;
import org.eclipse.jdt.core.search.IJavaSearchConstants;
import org.eclipse.jdt.core.search.IJavaSearchScope;
import org.eclipse.jdt.core.search.SearchPattern;
import org.eclipse.jdt.internal.corext.util.Messages;
import org.eclipse.jdt.ui.search.ElementQuerySpecification;
import org.eclipse.jdt.ui.search.PatternQuerySpecification;
import org.eclipse.jdt.ui.search.QuerySpecification;
import org.eclipse.jdt.internal.ui.IJavaHelpContextIds;
import org.eclipse.jdt.internal.ui.JavaPlugin;
import org.eclipse.jdt.internal.ui.actions.SelectionConverter;
import org.eclipse.jdt.internal.ui.browsing.LogicalPackage;
import org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler;
import org.eclipse.jdt.internal.ui.javaeditor.JavaEditor;
import org.eclipse.jdt.internal.ui.search.MatchLocations.MatchLocationSelectionDialog;
import org.eclipse.jdt.internal.ui.util.ExceptionHandler;
import org.eclipse.jdt.internal.ui.util.SWTUtil;

public interface IJavaSearchPage {
	void setJavaElement(IJavaElement javaElement);

	boolean isCaseSensitive();

	IJavaElement getJavaElement();

	int getLimitTo();

	String getPattern();

	int getScope();

	int getSearchFor();

	IWorkingSet[] getWorkingSets();

	int getIncludeMask();

	int getMatchLocations();

	void store(IDialogSettings settings);

	boolean performAction();

	void setVisible(boolean visible);

	boolean isValid();

	void createControl(Composite parent);

	void dispose();

	void setContainer(ISearchPageContainer container);
}
