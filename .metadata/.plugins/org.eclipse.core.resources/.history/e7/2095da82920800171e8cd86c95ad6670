package org.eclipse.jdt.internal.ui.text;

import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jface.text.IAutoEditStrategy;
import org.eclipse.jface.text.IInformationControlCreator;
import org.eclipse.jface.text.ITextHover;
import org.eclipse.jface.text.formatter.IContentFormatter;
import org.eclipse.jface.text.hyperlink.IHyperlinkDetector;
import org.eclipse.jface.text.information.IInformationPresenter;
import org.eclipse.jface.text.source.IAnnotationHover;
import org.eclipse.jface.text.source.ISourceViewer;
import org.eclipse.ui.texteditor.ITextEditor;
import org.eclipse.jdt.ui.text.IColorManager;
import org.eclipse.jdt.ui.text.JavaSourceViewerConfiguration;

public interface ISimpleJavaSourceViewerConfiguration {
	IAutoEditStrategy[] getAutoEditStrategies(ISourceViewer sourceViewer, String contentType);

	IAnnotationHover getAnnotationHover(ISourceViewer sourceViewer);

	IAnnotationHover getOverviewRulerAnnotationHover(ISourceViewer sourceViewer);

	int[] getConfiguredTextHoverStateMasks(ISourceViewer sourceViewer, String contentType);

	ITextHover getTextHover(ISourceViewer sourceViewer, String contentType, int stateMask);

	ITextHover getTextHover(ISourceViewer sourceViewer, String contentType);

	IContentFormatter getContentFormatter(ISourceViewer sourceViewer);

	IInformationControlCreator getInformationControlCreator(ISourceViewer sourceViewer);

	IInformationPresenter getInformationPresenter(ISourceViewer sourceViewer);

	IInformationPresenter getOutlinePresenter(ISourceViewer sourceViewer, boolean doCodeResolve);

	IInformationPresenter getHierarchyPresenter(ISourceViewer sourceViewer, boolean doCodeResolve);

	IHyperlinkDetector[] getHyperlinkDetectors(ISourceViewer sourceViewer);
}
