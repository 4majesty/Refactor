package org.eclipse.jdt.internal.ui.navigator;

import org.eclipse.swt.events.HelpListener;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.jface.action.IMenuCreator;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.jface.util.IPropertyChangeListener;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.ISelectionProvider;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.viewers.SelectionChangedEvent;
import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.jface.text.ITextSelection;
import org.eclipse.ui.IWorkbenchSite;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jdt.ui.actions.OpenAction;
import org.eclipse.jdt.ui.actions.SelectionDispatchAction;
import org.eclipse.jdt.internal.ui.javaeditor.JavaTextSelection;
import org.eclipse.jdt.ui.actions.IOpenAction;

public interface IOpenAndExpand {
	void run();

	void run(ISelection selection);

	void run(IStructuredSelection selection);

	void run(ITextSelection selection);

	void run(JavaTextSelection selection);

	void run(Object[] elements);

	void runWithEvent(Event event);

	void addPropertyChangeListener(IPropertyChangeListener listener);

	boolean equals(Object obj);

	int getAccelerator();

	String getActionDefinitionId();

	String getDescription();

	ImageDescriptor getDisabledImageDescriptor();

	Object getElementToOpen(Object object) throws JavaModelException;

	HelpListener getHelpListener();

	ImageDescriptor getHoverImageDescriptor();

	String getId();

	ImageDescriptor getImageDescriptor();

	IMenuCreator getMenuCreator();

	ISelection getSelection();

	ISelectionProvider getSelectionProvider();

	Shell getShell();

	IWorkbenchSite getSite();

	int getStyle();

	String getText();

	String getToolTipText();

	int hashCode();

	boolean isChecked();

	boolean isEnabled();

	boolean isHandled();

	void removePropertyChangeListener(IPropertyChangeListener listener);

	void selectionChanged(ISelection selection);

	void selectionChanged(IStructuredSelection selection);

	void selectionChanged(ITextSelection selection);

	void selectionChanged(JavaTextSelection selection);

	void selectionChanged(SelectionChangedEvent event);

	void setAccelerator(int keycode);

	void setActionDefinitionId(String id);

	void setChecked(boolean checked);

	void setDescription(String text);

	void setDisabledImageDescriptor(ImageDescriptor newImage);

	void setEnabled(boolean enabled);

	void setHelpListener(HelpListener listener);

	void setHoverImageDescriptor(ImageDescriptor newImage);

	void setId(String id);

	void setImageDescriptor(ImageDescriptor newImage);

	void setMenuCreator(IMenuCreator creator);

	void setSpecialSelectionProvider(ISelectionProvider provider);

	void setText(String text);

	void setToolTipText(String toolTipText);

	String toString();

	void update(ISelection selection);
}
