package com.successfactors.cdp.bean.mentoring;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.OneToMany;

import com.sf.sfv4.util.Tables.GENERIC_OBJECT_T;
import com.successfactors.cdp.service.util.mentoring.MatchingScoreTypeEnum;
import com.successfactors.cdp.service.util.mentoring.MentorshipStatusEnum;
import com.successfactors.genericobject.api.model.APISubVersion;
import com.successfactors.genericobject.api.model.APIVisibility;
import com.successfactors.genericobject.api.model.DataType;
import com.successfactors.genericobject.api.model.EffectiveDating;
import com.successfactors.genericobject.api.model.Type;
import com.successfactors.genericobject.api.model.Visibility;
import com.successfactors.genericobject.bean.model.impl.AssociationType;
import com.successfactors.genericobject.bean.model.impl.AuditFields;
import com.successfactors.genericobject.bean.model.impl.Field;
import com.successfactors.genericobject.bean.model.impl.MDFEntity;

@MDFEntity(effectiveDating = EffectiveDating.NONE, apiVisibility = APIVisibility.EDITABLE, apiSubVersion = APISubVersion.V1_0,
processorsList={ "com.successfactors.cdp.bean.mentoring.processor.MentorshipProcessor" })
public class MentoringProgramMatchedParticipant extends AuditFields {
  // System Fields
  /** Row Id. */
  @Column(name = GENERIC_OBJECT_T.ROW_ID, nullable = false)
  @Field(visibility = Visibility.READ_ONLY)
  private Long rowId;

  /** External Code. */
  @Column(name = GENERIC_OBJECT_T.EXTERNAL_CODE, nullable = false)
  @Field(visibility = Visibility.READ_ONLY, dataType = DataType.AUTO_NUMBER)
  protected String externalId;

  /** Internal Id. */
  @Column(name = GENERIC_OBJECT_T.INTERNAL_ID)
  @Field(visibility = Visibility.READ_ONLY)
  protected Long internalId;

  // Business Fields
  /** programId */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD1, nullable = false)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.STRING)
  private String programId;

  /** mentor */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD2, nullable = false)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.USER)
  private String mentor;

  /** mentee */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD3, nullable = false)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.USER)
  private String mentee;
  /** matchingScore */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD4, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.NUMBER)
  private Float matchingScore;
 
  /** MatchingScoreTypeEnum */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD5, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType =DataType.ENUM)
  private MatchingScoreTypeEnum matchingCategory;
  
  /** mentorship closure note */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD6, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.STRING, maxLength = GENERIC_OBJECT_T.CUSTOM_FIELD100_LEN)
  private String mentorshipClosureNote;

 /** mentor-mentee initiated closure status, default to MentorshipClosureStatusEnum.ACTIVE*/
  @Column(name = GENERIC_OBJECT_T.SF_FIELD7, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.ENUM)
  private MentorshipStatusEnum mentorshipStatus = MentorshipStatusEnum.ACTIVE;

  /** relationship close date*/
  @Column(name = GENERIC_OBJECT_T.SF_FIELD8, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.DATE)
  private Date mentorshipClosureDate;

  /** relationship closure withdraw date*/
  @Column(name = GENERIC_OBJECT_T.SF_FIELD9, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.DATE)
  private Date mentorshipWithdrawDate;

  /** mentoringProgramMatchedArea */
  @OneToMany()
  @AssociationType(type = Type.COMPOSITE)
  @Field(visibility = Visibility.EDITABLE)
  private List<MentoringProgramSignupFormSection> mentoringProgramMatchedArea=new ArrayList<MentoringProgramSignupFormSection>();

  /**
   * getRowId
   * @return rowId
   */
  public Long getRowId() {
    return rowId;
  }
/**
 * setRowId
 * @param rowId rowId
 */
  public void setRowId(Long rowId) {
    this.rowId = rowId;
  }
/**
 * getExternalId
 * @return externalId
 */
  public String getExternalId() {
    return externalId;
  }

  /**
   * setExternalId
   * @param externalCode externalCode
   */
  public void setExternalId(String externalCode) {
    this.externalId = externalCode;
  }
  
/**
 * getInternalId
 * @return internalId 
 */
  public Long getInternalId() {
    return internalId;
  }

  /**
   * setInternalId
   * @param internalId internalId
   */
  public void setInternalId(Long internalId) {
    this.internalId = internalId;
  }
  
/**
 * getProgramId
 * @return programId
 */
  public String getProgramId() {
    return programId;
  }
/**
 * setProgramId
 * @param programId programId
 */
  public void setProgramId(String programId) {
    this.programId = programId;
  }

  /**
   * getMentor
   * @return mentorId
   */
  public String getMentor() {
    return mentor;
  }

  /**
   * setMentor
   * @param mentorId mentorId
   */
  public void setMentor(String mentorId) {
    this.mentor = mentorId;
  }

  /**
   * getMentee
   * @return menteeId
   */
  public String getMentee() {
    return mentee;
  }

  /**
   * setMentee
   * @param menteeId menteeId
   */
  public void setMentee(String menteeId) {
    this.mentee = menteeId;
  }

  /**
   * getMatchingScore
   * @return matchingScore
   */
  public Float getMatchingScore() {
    return matchingScore;
  }
/**
 * setMatchingScore
 * @param matchingScore matchingScore
 */
  public void setMatchingScore(Float matchingScore) {
    this.matchingScore = matchingScore;
  }
/**
 * getMatchingCategory
 * @return matchingCategory
 */
  public MatchingScoreTypeEnum getMatchingCategory() {
    return matchingCategory;
  }
/**
 * setMatchingCategory
 * @param matchingCategory matchingCategory
 */
  public void setMatchingCategory(MatchingScoreTypeEnum matchingCategory) {
    this.matchingCategory = matchingCategory;
  }

  /**
   * getMentoringProgramMatchedArea
   * @return mentoringProgramMatchedArea
   */
  public List<MentoringProgramSignupFormSection> getMentoringProgramMatchedArea() {
    return mentoringProgramMatchedArea;
  }

  /**
   * setMentoringProgramMatchedArea
   * @param mentoringProgramMatchedArea mentoringProgramMatchedArea
   */
  public void setMentoringProgramMatchedArea(
      List<MentoringProgramSignupFormSection> mentoringProgramMatchedArea) {
    this.mentoringProgramMatchedArea = mentoringProgramMatchedArea;
  }
  
  public String getMentorshipClosureNote() {
    return mentorshipClosureNote;
  }
  
  public void setMentorshipClosureNote(String mentorshipClosureNote) {
    this.mentorshipClosureNote = mentorshipClosureNote;
  }
  
  public MentorshipStatusEnum getMentorshipStatus() {
    return (mentorshipStatus == null)? MentorshipStatusEnum.ACTIVE : mentorshipStatus;
  }

  public void setMentorshipStatus(MentorshipStatusEnum mentorshipStatus) {
    this.mentorshipStatus = mentorshipStatus;
  }

  public Date getMentorshipClosureDate() {
    return mentorshipClosureDate;
  }

  public void setMentorshipClosureDate(Date mentorshipClosureDate) {
    this.mentorshipClosureDate = mentorshipClosureDate;
  }

  public Date getMentorshipWithdrawDate() {
    return mentorshipWithdrawDate;
  }

  public void setMentorshipWithdrawDate(Date mentorshipWithdrawDate) {
    this.mentorshipWithdrawDate = mentorshipWithdrawDate;
  }
}
