package org.eclipse.jdt.internal.corext.refactoring.structure;

import org.eclipse.jdt.core.dom.AnnotationTypeDeclaration;
import org.eclipse.jdt.core.dom.EnumDeclaration;
import org.eclipse.jdt.core.dom.FieldAccess;
import org.eclipse.jdt.core.dom.FieldDeclaration;
import org.eclipse.jdt.core.dom.ImportDeclaration;
import org.eclipse.jdt.core.dom.MemberRef;
import org.eclipse.jdt.core.dom.MethodDeclaration;
import org.eclipse.jdt.core.dom.MethodInvocation;
import org.eclipse.jdt.core.dom.MethodRef;
import org.eclipse.jdt.core.dom.QualifiedName;
import org.eclipse.jdt.core.dom.SimpleName;
import org.eclipse.jdt.core.dom.TypeDeclaration;
import org.eclipse.jdt.core.dom.VariableDeclarationFragment;

public interface IReferenceAnalyzer {
	boolean needsTargetImport();

	boolean visit(TypeDeclaration node);

	boolean visit(VariableDeclarationFragment node);

	boolean visit(FieldDeclaration node);

	boolean visit(MethodDeclaration node);

	boolean visit(SimpleName node);

	boolean visit(QualifiedName node);

	boolean visit(FieldAccess node);

	boolean visit(MethodInvocation node);

	boolean visit(MemberRef node);

	boolean visit(MethodRef node);

	boolean visit(AnnotationTypeDeclaration node);

	boolean visit(EnumDeclaration node);
}
