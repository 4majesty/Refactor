package org.eclipse.jdt.internal.ui.callhierarchy;

import org.eclipse.core.runtime.Assert;
import org.eclipse.jface.action.Action;
import org.eclipse.ui.PlatformUI;
import org.eclipse.jdt.internal.ui.IJavaHelpContextIds;
import org.eclipse.jdt.internal.ui.JavaPluginImages;

/** 
 * Toggles the orientationof the layout of the call hierarchy
 */
class ToggleOrientationAction extends Action implements IToggleOrientationAction {
	private CallHierarchyViewPart fView;

	private int fActionOrientation;

	public ToggleOrientationAction(CallHierarchyViewPart v, int orientation) {
		super("", AS_RADIO_BUTTON);
		if (orientation == CallHierarchyViewPart.VIEW_ORIENTATION_HORIZONTAL) {
			setText(CallHierarchyMessages.ToggleOrientationAction_horizontal_label);
			setDescription(CallHierarchyMessages.ToggleOrientationAction_horizontal_description);
			setToolTipText(CallHierarchyMessages.ToggleOrientationAction_horizontal_tooltip);
			JavaPluginImages.setLocalImageDescriptors(this, "th_horizontal.gif");
		} else if (orientation == CallHierarchyViewPart.VIEW_ORIENTATION_VERTICAL) {
			setText(CallHierarchyMessages.ToggleOrientationAction_vertical_label);
			setDescription(CallHierarchyMessages.ToggleOrientationAction_vertical_description);
			setToolTipText(CallHierarchyMessages.ToggleOrientationAction_vertical_tooltip);
			JavaPluginImages.setLocalImageDescriptors(this, "th_vertical.gif");
		} else if (orientation == CallHierarchyViewPart.VIEW_ORIENTATION_AUTOMATIC) {
			setText(CallHierarchyMessages.ToggleOrientationAction_automatic_label);
			setDescription(CallHierarchyMessages.ToggleOrientationAction_automatic_description);
			setToolTipText(CallHierarchyMessages.ToggleOrientationAction_automatic_tooltip);
			JavaPluginImages.setLocalImageDescriptors(this, "th_automatic.gif");
		} else if (orientation == CallHierarchyViewPart.VIEW_ORIENTATION_SINGLE) {
			setText(CallHierarchyMessages.ToggleOrientationAction_single_label);
			setDescription(CallHierarchyMessages.ToggleOrientationAction_single_description);
			setToolTipText(CallHierarchyMessages.ToggleOrientationAction_single_tooltip);
			JavaPluginImages.setLocalImageDescriptors(this, "th_single.gif");
		} else {
			Assert.isTrue(false);
		}
		fView= v;
		fActionOrientation= orientation;
		PlatformUI.getWorkbench().getHelpSystem().setHelp(this, IJavaHelpContextIds.CALL_HIERARCHY_TOGGLE_ORIENTATION_ACTION);
	}

	@Override
	public int getOrientation() {
		return fActionOrientation;
	}

	@Override
	public void run() {
		if (isChecked()) {
			fView.fOrientation= fActionOrientation;
			fView.computeOrientation();
		}
	}
}
