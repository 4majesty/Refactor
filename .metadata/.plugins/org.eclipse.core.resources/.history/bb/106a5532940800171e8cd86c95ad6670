package org.eclipse.jdt.internal.ui.packageview;

import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.jface.resource.ImageDescriptor;
import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.ide.IDE;
import org.eclipse.ui.model.IWorkbenchAdapter;
import org.eclipse.jdt.core.ClasspathContainerInitializer;
import org.eclipse.jdt.core.IClasspathContainer;
import org.eclipse.jdt.core.IClasspathEntry;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.IPackageFragmentRoot;
import org.eclipse.jdt.core.JavaCore;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jdt.internal.corext.util.Messages;
import org.eclipse.jdt.internal.ui.JavaPlugin;
import org.eclipse.jdt.internal.ui.JavaPluginImages;
import org.eclipse.jdt.internal.ui.viewsupport.BasicElementLabels;

public interface IClassPathContainer {
	IJavaProject getProject();

	ClassPathContainer getParentClassPathContainer();

	Object getAdapter(Class adapter);

	Object[] getChildren(Object o);

	ImageDescriptor getImageDescriptor(Object object);

	String getLabel(Object o);

	Object getParent(Object o);

	boolean equals(Object obj);

	int hashCode();

	IPackageFragmentRoot[] getPackageFragmentRoots();

	IAdaptable[] getChildren();

	ImageDescriptor getImageDescriptor();

	String getLabel();

	IClasspathEntry getClasspathEntry();
}
