package org.eclipse.jdt.ui;

import org.eclipse.jface.viewers.Viewer;
import org.eclipse.jface.viewers.ViewerSorter;

/** 
 * Sorter for Java elements. Ordered by element category, then by element name. Package fragment roots are sorted as ordered on the classpath. <p> This class may be instantiated; it is not intended to be subclassed. </p>
 * @deprecated use {@link JavaElementComparator} instead.
 * @since 2.0
 * @noextend This class is not intended to be subclassed by clients.
 */
public class JavaElementSorter extends ViewerSorter implements IJavaElementSorter {
	private final JavaElementComparator fComparator;

	/** 
	* Constructor.
	*/
	public JavaElementSorter() {
		super(null);
		fComparator= new JavaElementComparator();
	}

	/** 
	* @deprecated Bug 22518. Method never used: does not override ViewerSorter#isSorterProperty(Object, String).Method could be removed, but kept for API compatibility.
	* @param element the element
	* @param property the property
	* @return always <code>true</code>
	*/
	@Override
	public boolean isSorterProperty(Object element, Object property) {
		return true;
	}

	@Override
	public int category(Object element) {
		return fComparator.category(element);
	}

	@Override
	public int compare(Viewer viewer, Object e1, Object e2) {
		return fComparator.compare(viewer, e1, e2);
	}

	/** 
	* Overrides  {@link org.eclipse.jface.viewers.ViewerSorter#getCollator()}.
	* @deprecated The method is not intended to be used by clients.
	*/
	@Override
	public final java.text.Collator getCollator() {
		if (collator == null) {
			collator= java.text.Collator.getInstance();
		}
		return collator;
	}
}
