package org.eclipse.jdt.internal.ui.dialogs;

import org.eclipse.core.runtime.IStatus;
import org.eclipse.jface.viewers.Viewer;
import org.eclipse.ui.dialogs.ContainerCheckedTreeViewer;
import org.eclipse.jdt.core.dom.CompilationUnit;
import org.eclipse.jdt.core.dom.IMethodBinding;
import org.eclipse.jdt.core.dom.ITypeBinding;
import org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser;
import org.eclipse.jdt.internal.corext.template.java.CodeTemplateContextType;
import org.eclipse.jdt.internal.corext.util.Messages;
import org.eclipse.jdt.internal.ui.IJavaHelpContextIds;
import org.eclipse.jdt.internal.ui.JavaPlugin;
import org.eclipse.jdt.internal.ui.JavaPluginImages;
import org.eclipse.jdt.internal.ui.JavaUIMessages;
import org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor;
import org.eclipse.jdt.internal.ui.util.ViewerPane;
import org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider;

public interface IOverrideMethodDialog {
	void run();

	void dispose();

	Object[] getChildren(Object parentElement);

	Object[] getElements(Object inputElement);

	Object getParent(Object element);

	ContainerCheckedTreeViewer getViewer();

	boolean hasChildren(Object element);

	void init(IMethodBinding[] methods, ITypeBinding[] types);

	void inputChanged(Viewer viewer, Object oldInput, Object newInput);

	boolean isShowTypes();

	void setShowTypes(boolean showTypes);

	int compare(Viewer viewer, Object first, Object second);

	IStatus validate(Object[] selection);

	CompilationUnit getCompilationUnit();

	boolean hasMethodsToOverride();
}
