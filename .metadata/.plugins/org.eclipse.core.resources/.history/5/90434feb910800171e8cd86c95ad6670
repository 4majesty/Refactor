package org.eclipse.jdt.internal.ui.typehierarchy;

import java.util.ArrayList;
import java.util.List;
import org.eclipse.core.runtime.Assert;
import org.eclipse.jface.viewers.ITreeContentProvider;
import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.jface.viewers.Viewer;
import org.eclipse.jface.viewers.ViewerFilter;
import org.eclipse.jdt.core.IJavaElement;
import org.eclipse.jdt.core.IMember;
import org.eclipse.jdt.core.IMethod;
import org.eclipse.jdt.core.IType;
import org.eclipse.jdt.core.ITypeHierarchy;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jdt.internal.corext.util.JavaModelUtil;
import org.eclipse.jdt.internal.corext.util.MethodOverrideTester;
import org.eclipse.jdt.ui.IWorkingCopyProvider;

public interface ITypeHierarchyContentProvider {
	void setMemberFilter(IMember[] memberFilter);

	IMember[] getMemberFilter();

	void setWorkingSetFilter(ViewerFilter filter);

	boolean providesWorkingCopies();

	Object[] getElements(Object parent);

	Object[] getChildren(Object element);

	boolean hasChildren(Object element);

	void inputChanged(Viewer part, Object oldInput, Object newInput);

	void dispose();

	Object getParent(Object element);
}
