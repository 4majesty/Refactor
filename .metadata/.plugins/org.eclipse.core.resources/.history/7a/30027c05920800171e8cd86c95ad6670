package org.eclipse.jdt.ui.wizards;

import java.util.List;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Image;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.core.resources.IResource;
import org.eclipse.jface.operation.IRunnableWithProgress;
import org.eclipse.jdt.core.IPackageFragment;
import org.eclipse.jdt.core.IType;
import org.eclipse.jdt.core.dom.ITypeBinding;
import org.eclipse.jdt.internal.ui.dialogs.FilteredTypesSelectionDialog;
import org.eclipse.jdt.internal.ui.dialogs.StatusInfo;
import org.eclipse.jdt.internal.ui.dialogs.TableTextCellEditor;
import org.eclipse.jdt.internal.ui.dialogs.TextFieldNavigationHandler;
import org.eclipse.jdt.internal.ui.preferences.CodeTemplatePreferencePage;
import org.eclipse.jdt.internal.ui.preferences.JavaPreferencesSettings;
import org.eclipse.jdt.internal.ui.refactoring.contentassist.CompletionContextRequestor;
import org.eclipse.jdt.internal.ui.refactoring.contentassist.ControlContentAssistHelper;
import org.eclipse.jdt.internal.ui.refactoring.contentassist.JavaPackageCompletionProcessor;
import org.eclipse.jdt.internal.ui.refactoring.contentassist.JavaTypeCompletionProcessor;
import org.eclipse.jdt.internal.ui.util.SWTUtil;
import org.eclipse.jdt.internal.ui.viewsupport.BasicElementLabels;
import org.eclipse.jdt.internal.ui.wizards.NewWizardMessages;
import org.eclipse.jdt.internal.ui.wizards.SuperInterfaceSelectionDialog;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.DialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.IDialogFieldListener;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.IListAdapter;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.IStringButtonAdapter;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.LayoutUtil;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.ListDialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.SelectionButtonDialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.SelectionButtonDialogFieldGroup;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.Separator;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.StringButtonDialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.StringButtonStatusDialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.StringDialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.IStringButtonStatusDialogField;
import org.eclipse.jdt.internal.ui.wizards.dialogfields.IStringButtonDialogField;

public interface INewTypeWizardPage {
	String addImport(String qualifiedTypeName);

	String addImport(ITypeBinding typeBinding);

	String addStaticImport(String declaringTypeName, String simpleName, boolean isField);

	int hashCode();

	boolean equals(Object obj);

	String getText(Object element);

	Image getImage(Object element);

	void changeControlPressed(DialogField field);

	void customButtonPressed(ListDialogField field, int index);

	void selectionChanged(ListDialogField field);

	void dialogFieldChanged(DialogField field);

	void doubleClicked(ListDialogField field);

	void widgetSelected(SelectionEvent e);

	void widgetDefaultSelected(SelectionEvent e);

	String getPackageText();

	String getEnclosingTypeText();

	IPackageFragment getPackageFragment();

	void setPackageFragment(IPackageFragment pack, boolean canBeModified);

	IType getEnclosingType();

	void setEnclosingType(IType type, boolean canBeModified);

	boolean isEnclosingTypeSelected();

	void setEnclosingTypeSelection(boolean isSelected, boolean canBeModified);

	String getTypeName();

	void setTypeName(String name, boolean canBeModified);

	int getModifiers();

	void setModifiers(int modifiers, boolean canBeModified);

	String getSuperClass();

	void setSuperClass(String name, boolean canBeModified);

	List getSuperInterfaces();

	void setSuperInterfaces(List interfacesNames, boolean canBeModified);

	boolean addSuperInterface(String superInterface);

	void setAddComments(boolean doAddComments, boolean canBeModified);

	void enableCommentControl(boolean useAddCommentValue);

	boolean isAddComments();

	IResource getModifiedResource();

	void createType(IProgressMonitor monitor) throws CoreException, InterruptedException;

	IType getCreatedType();

	IRunnableWithProgress getRunnable();
}
