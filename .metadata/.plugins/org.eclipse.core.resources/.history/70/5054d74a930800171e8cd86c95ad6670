package org.eclipse.jdt.internal.ui.navigator;

import java.util.Set;
import org.eclipse.jface.viewers.Viewer;
import org.eclipse.ui.IMemento;
import org.eclipse.ui.navigator.ICommonContentExtensionSite;
import org.eclipse.ui.navigator.PipelinedShapeModification;
import org.eclipse.ui.navigator.PipelinedViewerUpdate;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.JavaCore;
import org.eclipse.jdt.ui.PreferenceConstants;
import org.eclipse.jdt.internal.ui.navigator.IExtensionStateConstants.Values;
import org.eclipse.jdt.internal.ui.packageview.PackageExplorerContentProvider;

public interface IJavaNavigatorContentProvider {
	void init(ICommonContentExtensionSite commonContentExtensionSite);

	void dispose();

	void inputChanged(Viewer viewer, Object oldInput, Object newInput);

	Object getParent(Object element);

	Object[] getElements(Object inputElement);

	boolean hasChildren(Object element);

	Object[] getChildren(Object parentElement);

	void restoreState(IMemento memento);

	void saveState(IMemento memento);

	void getPipelinedChildren(Object parent, Set currentChildren);

	void getPipelinedElements(Object input, Set currentElements);

	Object getPipelinedParent(Object object, Object suggestedParent);

	PipelinedShapeModification interceptAdd(PipelinedShapeModification addModification);

	PipelinedShapeModification interceptRemove(PipelinedShapeModification removeModification);

	boolean interceptRefresh(PipelinedViewerUpdate refreshSynchronization);

	boolean interceptUpdate(PipelinedViewerUpdate updateSynchronization);
}
