package org.eclipse.jdt.internal.ui.text.java.hover;

import org.eclipse.jface.text.IInformationControlCreator;
import org.eclipse.jface.text.IRegion;
import org.eclipse.jface.text.ITextViewer;
import org.eclipse.jface.text.information.IInformationProvider;
import org.eclipse.jface.text.information.IInformationProviderExtension;
import org.eclipse.jface.text.information.IInformationProviderExtension2;
import org.eclipse.ui.IEditorPart;
import org.eclipse.jdt.internal.ui.text.JavaWordFinder;

public class JavaInformationProvider implements IInformationProvider, IInformationProviderExtension, IInformationProviderExtension2, IJavaInformationProvider {
	protected JavaTypeHover fImplementation;

	public JavaInformationProvider(IEditorPart editor) {
		if (editor != null) {
			fImplementation= new JavaTypeHover();
			fImplementation.setEditor(editor);
		}
	}

	@Override
	public IRegion getSubject(ITextViewer textViewer, int offset) {
		if (textViewer != null)
			return JavaWordFinder.findWord(textViewer.getDocument(), offset);
		return null;
	}

	/** 
	* @see IInformationProvider#getInformation(ITextViewer,IRegion)
	* @deprecated
	*/
	@Override
	public String getInformation(ITextViewer textViewer, IRegion subject) {
		if (fImplementation != null) {
			String s= fImplementation.getHoverInfo(textViewer, subject);
			if (s != null && s.trim().length() > 0) {
				return s;
			}
		}
		return null;
	}

	@Override
	public Object getInformation2(ITextViewer textViewer, IRegion subject) {
		if (fImplementation == null)
			return null;
		return fImplementation.getHoverInfo2(textViewer, subject);
	}

	@Override
	public IInformationControlCreator getInformationPresenterControlCreator() {
		if (fImplementation == null)
			return null;
		return fImplementation.getInformationPresenterControlCreator();
	}
}
