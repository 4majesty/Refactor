package org.eclipse.jdt.internal.ui.callhierarchy;

import org.eclipse.core.runtime.Assert;
import org.eclipse.jface.action.Action;
import org.eclipse.jdt.core.search.IJavaSearchConstants;

/** 
 * Toggles how fields should be expanded: all references, read accesses, write accesses.
 */
public class SelectFieldModeAction extends Action implements ISelectFieldModeAction {
	private CallHierarchyViewPart fView;

	private int fMode;

	public SelectFieldModeAction(CallHierarchyViewPart v, int mode) {
		super(null, AS_RADIO_BUTTON);
		if (mode == IJavaSearchConstants.REFERENCES) {
			setText(CallHierarchyMessages.SelectFieldModeAction_all_references_label);
			setDescription(CallHierarchyMessages.SelectFieldModeAction_all_references_description);
		} else if (mode == IJavaSearchConstants.READ_ACCESSES) {
			setText(CallHierarchyMessages.SelectFieldModeAction_read_accesses_label);
			setDescription(CallHierarchyMessages.SelectFieldModeAction_read_accesses_description);
		} else if (mode == IJavaSearchConstants.WRITE_ACCESSES) {
			setText(CallHierarchyMessages.SelectFieldModeAction_write_accesses_label);
			setDescription(CallHierarchyMessages.SelectFieldModeAction_write_accesses_description);
		} else {
			Assert.isTrue(false);
		}
		fView= v;
		fMode= mode;
	}

	@Override
	public int getMode() {
		return fMode;
	}

	@Override
	public void run() {
		fView.setFieldMode(fMode);
	}
}
