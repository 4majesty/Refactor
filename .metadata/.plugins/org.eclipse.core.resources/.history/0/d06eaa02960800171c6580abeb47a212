package org.eclipse.jdt.internal.corext.refactoring.typeconstraints;

import org.eclipse.core.runtime.Assert;
import org.eclipse.jdt.core.ICompilationUnit;
import org.eclipse.jdt.core.dom.ITypeBinding;
import org.eclipse.jdt.core.dom.Type;
import org.eclipse.jdt.internal.corext.dom.ASTNodes;

public final class TypeVariable extends ConstraintVariable implements ITypeVariable {
	private final String fSource;

	private final CompilationUnitRange fTypeRange;

	public TypeVariable(Type type) {
		super(type.resolveBinding());
		fSource= type.toString();
		ICompilationUnit cu= ASTCreator.getCu(type);
		Assert.isNotNull(cu);
		fTypeRange= new CompilationUnitRange(cu, ASTNodes.getElementType(type));
	}

	public TypeVariable(ITypeBinding binding, String source, CompilationUnitRange range) {
		super(binding);
		fSource= source;
		fTypeRange= range;
	}

	@Override
	public String toString() {
		return fSource;
	}

	@Override
	public CompilationUnitRange getCompilationUnitRange() {
		return fTypeRange;
	}
}
