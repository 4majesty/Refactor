package com.successfactors.cdp.bean.mentoring;

import javax.persistence.Column;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;

import com.sf.sfv4.util.Tables.GENERIC_OBJECT_T;
import com.successfactors.cdp.service.util.mentoring.ProgramParticipantTypeEnum;
import com.successfactors.genericobject.api.model.DataType;
import com.successfactors.genericobject.bean.model.impl.AuditFields;
import com.successfactors.genericobject.bean.model.impl.Field;
import com.successfactors.genericobject.api.model.Visibility;

/**
 * Program Participant Abstract Entity.
 * @author I309618
 *
 * @param <T> Signup Form Type
 */
public abstract class MentoringProgramParticipant<T extends MentoringProgramSignupForm> extends AuditFields {
  //System Fields  
  /** Row Id. */
  @Column(name = GENERIC_OBJECT_T.ROW_ID, nullable = false)
  @Field(visibility = Visibility.READ_ONLY)
  private Long rowId;
  
  /** External Code. */
  @Column(name = GENERIC_OBJECT_T.EXTERNAL_CODE, nullable = false)
  @Field(visibility = Visibility.READ_ONLY, dataType = DataType.AUTO_NUMBER)
  protected String externalId;
 
  /** Internal Id. */
  @Column(name = GENERIC_OBJECT_T.INTERNAL_ID)
  @Field(visibility = Visibility.READ_ONLY)
  protected Long internalId;
 
  //Business Fields
  /**type: mentor or mentee */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD1, nullable = false)
  @Field(visibility = Visibility.EDITABLE, dataType=DataType.ENUM)
  @Enumerated(EnumType.STRING)
  private ProgramParticipantTypeEnum type;
  
  /** user */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD2, nullable = false)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.USER)
  private String user;
  
  /** threshold */
  @Column(name = GENERIC_OBJECT_T.SF_FIELD5, nullable = true)
  @Field(visibility = Visibility.EDITABLE, dataType = DataType.NUMBER)
  private int threshold;
 
  /**
   * internalId
   * @return internalId
   */
  public Long getInternalId() {
    return internalId;
  }
/**
 * setInternalId
 * @param internalId internalId
 */
  public void setInternalId(Long internalId) {
    this.internalId = internalId;
  }
/**
 * type
 * @return type mentor Or mentee
 */
  public ProgramParticipantTypeEnum getType() {
    return type;
  }
/**
 * setType
 * @param type ProgramParticipantTypeEnum.MENTOR or ProgramParticipantTypeEnum.MENTEE
 */
  public void setType(ProgramParticipantTypeEnum type) {
    this.type = type;
  }
/**
 * getUser
 * @return userId
 */
  public String getUser() {
    return user;
  }
/**
 * setUser
 * @param userId userId
 */
  public void setUser(String userId) {
    this.user = userId;
  }
/**
 * getSignupForm
 * 
 */
  public abstract T getSignupForm();
/**
 * setSignupForm
 * @param signupForm signupForm
 */
  public abstract void setSignupForm(T signupForm);

  /**
   * getExternalId
   * @return externalId
   */
  public String getExternalId() {
    return externalId;
  }
/**
 * setExternalId
 * @param externalCode externalCode
 */
  public void setExternalId(String externalCode) {
    this.externalId = externalCode;
  }
/**
 * getRowId
 * @return rowId
 */
  public Long getRowId() {
    return rowId;
  }
/**
 * setRowId
 * @param rowId rowId
 */
  public void setRowId(Long rowId) {
    this.rowId = rowId;
  }
/**
 * getThreshold
 * @return threshold
 */
  public int getThreshold() {
    return threshold;
  }
/**
 * setThreshold
 * @param threshold threshold
 */
  public void setThreshold(int threshold) {
    this.threshold = threshold;
  }
}
