package org.eclipse.jdt.internal.corext.refactoring.code.flow;

import java.util.List;
import org.eclipse.jdt.core.dom.ASTNode;
import org.eclipse.jdt.core.dom.Block;
import org.eclipse.jdt.core.dom.CatchClause;
import org.eclipse.jdt.core.dom.EnhancedForStatement;
import org.eclipse.jdt.core.dom.ForStatement;
import org.eclipse.jdt.core.dom.IVariableBinding;
import org.eclipse.jdt.core.dom.MethodDeclaration;
import org.eclipse.jdt.core.dom.ReturnStatement;
import org.eclipse.jdt.core.dom.SingleVariableDeclaration;
import org.eclipse.jdt.core.dom.VariableDeclarationExpression;
import org.eclipse.jdt.core.dom.VariableDeclarationFragment;
import org.eclipse.jdt.core.dom.VariableDeclarationStatement;

public interface IInOutFlowAnalyzer {
	FlowInfo perform(ASTNode[] selectedNodes);

	void endVisit(Block node);

	void endVisit(CatchClause node);

	void endVisit(EnhancedForStatement node);

	void endVisit(ForStatement node);

	void endVisit(MethodDeclaration node);
}
