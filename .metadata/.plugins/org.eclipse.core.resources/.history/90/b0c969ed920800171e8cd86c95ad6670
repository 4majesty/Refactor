package org.eclipse.jdt.internal.ui.callhierarchy;

import org.eclipse.ui.PlatformUI;
import org.eclipse.jdt.core.IMember;
import org.eclipse.jdt.core.IType;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jdt.core.search.IJavaSearchScope;
import org.eclipse.jdt.core.search.SearchEngine;
import org.eclipse.jdt.internal.ui.IJavaHelpContextIds;
import org.eclipse.jdt.internal.ui.JavaPlugin;
import org.eclipse.jdt.internal.ui.search.JavaSearchScopeFactory;

class SearchScopeHierarchyAction extends SearchScopeAction implements ISearchScopeHierarchyAction {
	private final SearchScopeActionGroup fGroup;

	public SearchScopeHierarchyAction(SearchScopeActionGroup group) {
		super(group, CallHierarchyMessages.SearchScopeActionGroup_hierarchy_text);
		this.fGroup= group;
		setToolTipText(CallHierarchyMessages.SearchScopeActionGroup_hierarchy_tooltip);
		PlatformUI.getWorkbench().getHelpSystem().setHelp(this, IJavaHelpContextIds.CALL_HIERARCHY_SEARCH_SCOPE_ACTION);
	}

	@Override
	public IJavaSearchScope getSearchScope() {
		try {
			IMember[] members= fGroup.getView().getInputElements();
			if (members != null && members.length == 1) {
				IType type= members[0] instanceof IType ? (IType)members[0] : members[0].getDeclaringType();
				return SearchEngine.createHierarchyScope(type);
			} else {
				return null;
			}
		} catch (JavaModelException e) {
			JavaPlugin.log(e);
		}
		return null;
	}

	@Override
	public int getSearchScopeType() {
		return SearchScopeActionGroup.SEARCH_SCOPE_TYPE_HIERARCHY;
	}

	@Override
	public String getFullDescription() {
		IMember[] members= fGroup.getView().getInputElements();
		if (members != null && members.length == 1) {
			IType type= members[0] instanceof IType ? (IType)members[0] : members[0].getDeclaringType();
			return JavaSearchScopeFactory.getInstance().getHierarchyScopeDescription(type);
		} else {
			return JavaSearchScopeFactory.getInstance().getWorkspaceScopeDescription(true);
		}
	}
}
