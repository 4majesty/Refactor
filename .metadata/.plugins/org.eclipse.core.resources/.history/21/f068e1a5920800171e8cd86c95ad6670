package org.eclipse.jdt.internal.ui.javaeditor;

import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.jface.text.IDocument;
import org.eclipse.jface.text.source.ISourceViewer;
import org.eclipse.jdt.core.dom.BooleanLiteral;
import org.eclipse.jdt.core.dom.CharacterLiteral;
import org.eclipse.jdt.core.dom.CompilationUnit;
import org.eclipse.jdt.core.dom.ConstructorInvocation;
import org.eclipse.jdt.core.dom.NumberLiteral;
import org.eclipse.jdt.core.dom.SimpleName;
import org.eclipse.jdt.core.dom.SuperConstructorInvocation;
import org.eclipse.jdt.internal.ui.javaeditor.SemanticHighlightingManager.Highlighting;
import org.eclipse.jdt.internal.ui.text.java.IJavaReconcilingListener;

public interface ISemanticHighlightingReconciler {
	boolean visit(BooleanLiteral node);

	boolean visit(CharacterLiteral node);

	boolean visit(NumberLiteral node);

	boolean visit(ConstructorInvocation node);

	boolean visit(SuperConstructorInvocation node);

	boolean visit(SimpleName node);

	void aboutToBeReconciled();

	void reconciled(CompilationUnit ast, boolean forced, IProgressMonitor progressMonitor);

	void install(JavaEditor editor, ISourceViewer sourceViewer, SemanticHighlightingPresenter presenter, SemanticHighlighting[] semanticHighlightings, Highlighting[] highlightings);

	void uninstall();

	void inputDocumentAboutToBeChanged(IDocument oldInput, IDocument newInput);

	void inputDocumentChanged(IDocument oldInput, IDocument newInput);

	void refresh();
}
