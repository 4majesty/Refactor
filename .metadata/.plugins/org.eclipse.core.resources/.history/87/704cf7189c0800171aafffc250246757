package com.successfactors.cdp.service.mentoring.impl;

import java.util.List;

import javax.inject.Inject;

import org.jboss.seam.annotations.In;

import com.successfactors.cdp.bean.mentoring.MentoringProgramMentorRequest;
import com.successfactors.cdp.service.mentoring.GetMentoringRequest;
import com.successfactors.genericobject.api.model.ObjectDefinition;
import com.successfactors.genericobject.api.sql.MDFCriteria;
import com.successfactors.genericobject.api.sql.MDFResultSet;
import com.successfactors.genericobject.api.sql.Projections;
import com.successfactors.genericobject.api.sql.Restrictions;
import com.successfactors.genericobject.app.datamodel.ConfigurationProvider;
import com.successfactors.genericobject.app.sql.GOSQLGeneratorContext;
import com.successfactors.logging.api.LogManager;
import com.successfactors.logging.api.Logger;
import com.successfactors.platform.bean.ParamBean;
import com.successfactors.sca.ServiceApplicationException;
import com.successfactors.sca.ServiceQueryImpl;
import com.successfactors.sca.config.Service;

/**
 * Service command to get mentoring requests according to program ID,
 * mentor/mentee ID and status
 * 
 * @author Keqin Liu
 */
@Service
public class GetMentoringRequestImpl implements ServiceQueryImpl<List<MentoringProgramMentorRequest>, GetMentoringRequest> {
  private static Logger logger = LogManager.getLogger();

  /** Parameter bean */
  @Inject
  @In
  private ParamBean params;

  /** MDF configuration provider */
  @Inject
  @In(create = true)
  private ConfigurationProvider configurationProvider;
 
  @Override
  public List<MentoringProgramMentorRequest> execute(GetMentoringRequest cmd) throws ServiceApplicationException {
    ObjectDefinition def = configurationProvider.getObjectDefinition(MentoringProgramMentorRequest.class);
    MDFCriteria search = new GOSQLGeneratorContext(def, params);
    search.setProjection(Projections.all());
    search.add(Restrictions.and(Restrictions.eq("programId", cmd.getProgramId()), Restrictions.in("mentoringRequestStatus", cmd.getStatus())));

    if (cmd.getMentorIds().size() > 0) {
      search.add(Restrictions.and(Restrictions.in("mentor", cmd.getMentorIds())));
    }

    if (cmd.getMenteeIds().size() > 0) {
      search.add(Restrictions.and(Restrictions.in("mentee", cmd.getMenteeIds())));
    }
    MDFResultSet resultSet = search.execute();

    return resultSet.getBeans();
  }
}