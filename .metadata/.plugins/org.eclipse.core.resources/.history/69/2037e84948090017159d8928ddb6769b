package com.successfactors.cdp.app.mentoring.upgradecenter;
import com.successfactors.cdp.api.service.util.MentoringJobFacade;
import com.successfactors.cdp.service.util.MentoringJobFacadeImpl;
import com.successfactors.legacy.bean.provisioning.FeatureEnum;
import com.successfactors.logging.api.Logger;
import com.successfactors.sca.ServiceApplicationException;
import com.successfactors.sca.ServiceCommandHandler;
import com.successfactors.upgradecenter.core.UpgradeAction;
import com.successfactors.upgradecenter.core.UpgradeCenterActionException;
import com.successfactors.upgradecenter.core.UpgradeDependencyResult;
import com.successfactors.upgradecenter.service.UCUpdateFeatureSet;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;
import org.jboss.seam.ScopeType;
import com.successfactors.platform.di.SFContextConstant;
import com.successfactors.logging.api.LogManager;
import javax.inject.Inject;
import java.util.ArrayList;
import java.util.List;

/**
 *  @Author JOJO WANG (I324657)
 * 2/14/17
 */
@Name("mentoringProgramUpgradeActionProcessor")
@javax.inject.Named("mentoringProgramUpgradeActionProcessor")
@Scope(ScopeType.EVENT)
@org.springframework.context.annotation.Scope(SFContextConstant.SCOPE_EVENT)
public class MentoringProgramUpgradeActionProcessor implements UpgradeAction {
  @Inject
  @In(value = "scaHandler")
  private ServiceCommandHandler scaHandler;
  private static  Logger logger = LogManager.getLogger();

  @Override
  public boolean upgrade() throws UpgradeCenterActionException {
    boolean success=false;
    success=enableMentoringFeature();
    if(success=true) {
      MentoringJobFacade mentoringJobFacade = new MentoringJobFacadeImpl();
      mentoringJobFacade.scheduleMentoringJob();
    }
    return success;
  }

  public UpgradeDependencyResult checkUpgradeDependencies() {
    return null;
  }


  private boolean enableMentoringFeature() throws UpgradeCenterActionException {
    List<FeatureEnum> featureList = new ArrayList<>();
    UCUpdateFeatureSet updateCmd = new UCUpdateFeatureSet();
    updateCmd.setFeatureList(featureList);
    featureList.add(FeatureEnum.CDP_MENTORING);
    updateCmd.setEnable(true);
    updateCmd.setUpgradeId("MENTORING");
    boolean success = false;
    try {
      success = scaHandler.execute(updateCmd);
    } catch (UpgradeCenterActionException ucae) {
      throw ucae;
    } catch (ServiceApplicationException sae) {
      logger.error("An unknown error has occured while enabling V12 UI.", sae);
      throw new UpgradeCenterActionException(UpgradeCenterActionException.GENERIC_ERROR);
    }
    return success;
  }
}