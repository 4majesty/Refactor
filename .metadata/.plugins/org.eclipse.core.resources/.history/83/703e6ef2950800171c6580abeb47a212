package org.eclipse.jdt.internal.corext.refactoring.code;

import java.util.List;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.ltk.core.refactoring.Change;
import org.eclipse.ltk.core.refactoring.RefactoringStatus;
import org.eclipse.jdt.internal.corext.refactoring.ParameterInfo;
import org.eclipse.jdt.internal.corext.util.Messages;
import org.eclipse.jdt.ui.JavaElementLabels;
import org.eclipse.jdt.internal.ui.JavaPlugin;
import org.eclipse.jdt.internal.ui.actions.SelectionConverter;
import org.eclipse.jdt.internal.ui.viewsupport.BasicElementLabels;

public interface IIntroduceParameterRefactoring {
	boolean canEnableDelegateUpdating();

	boolean getDelegateUpdating();

	void setDelegateUpdating(boolean updating);

	void setDeprecateDelegates(boolean deprecate);

	boolean getDeprecateDelegates();

	String getName();

	RefactoringStatus checkInitialConditions(IProgressMonitor pm) throws CoreException;

	List getParameterInfos();

	ParameterInfo getAddedParameterInfo();

	String getMethodSignaturePreview();

	void setParameterName(String name);

	String guessedParameterName();

	String[] guessParameterNames();

	RefactoringStatus validateInput();

	RefactoringStatus checkFinalConditions(IProgressMonitor pm) throws CoreException;

	Change createChange(IProgressMonitor pm) throws CoreException;

	String getDelegateUpdatingTitle(boolean plural);
}
