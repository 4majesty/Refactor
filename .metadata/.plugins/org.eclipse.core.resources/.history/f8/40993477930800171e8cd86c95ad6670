package org.eclipse.jdt.internal.ui.javadocexport;

import java.io.File;
import java.util.List;
import java.util.StringTokenizer;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IStatus;
import org.eclipse.core.runtime.MultiStatus;
import org.eclipse.core.runtime.Path;
import org.eclipse.core.runtime.Platform;
import org.eclipse.core.runtime.content.IContentType;
import org.eclipse.core.resources.IContainer;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.jface.dialogs.IDialogSettings;
import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.jdt.core.ICompilationUnit;
import org.eclipse.jdt.core.IJavaElement;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jdt.core.IPackageFragment;
import org.eclipse.jdt.core.IPackageFragmentRoot;
import org.eclipse.jdt.core.JavaCore;
import org.eclipse.jdt.core.JavaModelException;
import org.eclipse.jdt.internal.corext.util.Messages;
import org.eclipse.jdt.launching.ExecutionArguments;
import org.eclipse.jdt.launching.IVMInstall;
import org.eclipse.jdt.launching.IVMInstallType;
import org.eclipse.jdt.launching.JavaRuntime;
import org.eclipse.jdt.ui.JavaUI;
import org.eclipse.jdt.ui.PreferenceConstants;
import org.eclipse.jdt.internal.ui.JavaPlugin;
import org.eclipse.jdt.internal.ui.JavaUIStatus;
import org.eclipse.jdt.internal.ui.dialogs.StatusInfo;
import org.eclipse.jdt.internal.ui.viewsupport.BasicElementLabels;
import org.eclipse.jdt.internal.ui.dialogs.IStatusInfo;

public interface IJavadocOptionsManager {
	String[] getJavadocCommandHistory();

	StatusInfo getWizardStatus();

	IJavaElement[] getInitialElements();

	IJavaElement[] getSourceElements();

	String getAccess();

	String getAntpath();

	boolean isFromStandard();

	String getDestination();

	String getDocletPath();

	String getDocletName();

	String getStyleSheet();

	String getOverview();

	String getAdditionalParams();

	String getVMParams();

	IPath[] getClasspath();

	IPath[] getSourcepath();

	String getTitle();

	boolean doOpenInBrowser();

	String[] getHRefs();

	boolean getBoolean(String flag);

	IStatus getArgumentArray(List vmArgs, List toolArgs);

	Element createXML(IJavaProject[] projects) throws CoreException;

	File writeXML(Element javadocElement) throws CoreException;

	void updateDialogSettings(IDialogSettings dialogSettings, IJavaProject[] checkedProjects);

	void setJavadocCommandHistory(String[] javadocCommandHistory);

	void setAccess(String access);

	void setDestination(String destination);

	void setDocletPath(String docletpath);

	void setDocletName(String docletname);

	void setStyleSheet(String stylesheet);

	void setOverview(String overview);

	void setAdditionalParams(String params);

	void setVMParams(String params);

	void setGeneralAntpath(String antpath);

	void setClasspath(IPath[] classpath);

	void setSourcepath(IPath[] sourcepath);

	void setSelectedElements(IJavaElement[] elements);

	void setFromStandard(boolean fromStandard);

	void setTitle(String title);

	void setOpenInBrowser(boolean openInBrowser);

	void setHRefs(String[] hrefs);

	void setBoolean(String flag, boolean value);

	void setSource(String source);

	String getSource();

	RecentSettingsStore getRecentSettings();

	void updateRecentSettings(IJavaProject project);
}
