package org.eclipse.jdt.internal.corext.refactoring.code;

import java.util.List;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.ltk.core.refactoring.Change;
import org.eclipse.ltk.core.refactoring.RefactoringStatus;
import org.eclipse.jdt.core.dom.SimpleName;
import org.eclipse.jdt.internal.corext.fix.LinkedProposalModel;
import org.eclipse.jdt.internal.corext.refactoring.base.JavaStatusContext;
import org.eclipse.jdt.internal.corext.refactoring.changes.TextChangeCompatibility;
import org.eclipse.jdt.internal.corext.refactoring.rename.TempDeclarationFinder;
import org.eclipse.jdt.internal.corext.refactoring.rename.TempOccurrenceAnalyzer;
import org.eclipse.jdt.internal.corext.refactoring.util.RefactoringASTParser;
import org.eclipse.jdt.internal.corext.refactoring.util.ResourceUtil;
import org.eclipse.jdt.internal.corext.util.JdtFlags;
import org.eclipse.jdt.internal.corext.util.Messages;
import org.eclipse.jdt.ui.CodeGeneration;
import org.eclipse.jdt.ui.JavaElementLabels;
import org.eclipse.jdt.internal.ui.viewsupport.BasicElementLabels;
import org.eclipse.jdt.internal.ui.viewsupport.BindingLabelProvider;

public interface IPromoteTempToFieldRefactoring {
	String getName();

	int[] getAvailableVisibilities();

	int getVisibility();

	boolean getDeclareFinal();

	boolean getDeclareStatic();

	int getInitializeIn();

	void setVisibility(int accessModifier);

	void setDeclareFinal(boolean declareFinal);

	void setDeclareStatic(boolean declareStatic);

	void setFieldName(String fieldName);

	void setInitializeIn(int initializeIn);

	boolean canEnableSettingStatic();

	boolean canEnableSettingFinal();

	boolean canEnableSettingDeclareInConstructors();

	boolean canEnableSettingDeclareInMethod();

	boolean canEnableSettingDeclareInFieldDeclaration();

	RefactoringStatus checkInitialConditions(IProgressMonitor pm) throws CoreException;

	String[] guessFieldNames();

	RefactoringStatus validateInput();

	RefactoringStatus checkFinalConditions(IProgressMonitor pm) throws CoreException;

	Change createChange(IProgressMonitor pm) throws CoreException;

	List getUsageOfEnclosingNodes();

	boolean getClassTypeVariablesUsed();

	boolean visit(SimpleName node);

	void setLinkedProposalModel(LinkedProposalModel model);
}
