package org.eclipse.jdt.internal.ui.callhierarchy;

import org.eclipse.core.runtime.Assert;
import org.eclipse.jface.action.Action;
import org.eclipse.ui.PlatformUI;
import org.eclipse.jdt.internal.ui.IJavaHelpContextIds;
import org.eclipse.jdt.internal.ui.JavaPluginImages;

/** 
 * Toggles the call direction of the call hierarchy (i.e. toggles between showing callers and callees.)
 */
class ToggleCallModeAction extends Action implements IToggleCallModeAction {
	private CallHierarchyViewPart fView;

	private int fMode;

	public ToggleCallModeAction(CallHierarchyViewPart v, int mode) {
		super("", AS_RADIO_BUTTON);
		if (mode == CallHierarchyViewPart.CALL_MODE_CALLERS) {
			setText(CallHierarchyMessages.ToggleCallModeAction_callers_label);
			setDescription(CallHierarchyMessages.ToggleCallModeAction_callers_description);
			setToolTipText(CallHierarchyMessages.ToggleCallModeAction_callers_tooltip);
			JavaPluginImages.setLocalImageDescriptors(this, "ch_callers.gif");
		} else if (mode == CallHierarchyViewPart.CALL_MODE_CALLEES) {
			setText(CallHierarchyMessages.ToggleCallModeAction_callees_label);
			setDescription(CallHierarchyMessages.ToggleCallModeAction_callees_description);
			setToolTipText(CallHierarchyMessages.ToggleCallModeAction_callees_tooltip);
			JavaPluginImages.setLocalImageDescriptors(this, "ch_callees.gif");
		} else {
			Assert.isTrue(false);
		}
		fView= v;
		fMode= mode;
		PlatformUI.getWorkbench().getHelpSystem().setHelp(this, IJavaHelpContextIds.CALL_HIERARCHY_TOGGLE_CALL_MODE_ACTION);
	}

	@Override
	public int getMode() {
		return fMode;
	}

	@Override
	public void run() {
		fView.setCallMode(fMode);
	}
}
