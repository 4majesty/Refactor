package com.successfactors.cdp.ui.controller.mentoring;

import com.successfactors.cdp.bean.mentoring.vo.MatchedParticipantVO;
import com.successfactors.cdp.bean.mentoring.vo.ProgramVO;
import com.successfactors.cdp.bean.mentoring.vo.overview.ProgramDetailsTabVO;
import com.successfactors.cdp.bean.mentoring.vo.overview.ProgramMenteesTabVO;
import com.successfactors.cdp.bean.mentoring.vo.overview.ProgramMentorsTabVO;
import com.successfactors.legacy.util.json.JSONObjectOutput;
import org.jboss.seam.annotations.Scope;
import org.json.JSONObject;
import javax.inject.Inject;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

public interface IMentoringProgramAdminController {
	JSONObjectOutput saveAndActiveProgram(ProgramVO pvo);

	JSONObjectOutput deleteProgram(String programId);

	JSONObjectOutput saveProgramDraft(ProgramVO pvo);

	JSONObjectOutput initWizard(String programId);

	JSONObjectOutput initOverview(String programId);

	JSONObjectOutput saveOverviewMentorsTab(ProgramMentorsTabVO addedVOList, ProgramMentorsTabVO updatedVOList,
			ProgramMentorsTabVO deletedVOList);

	JSONObjectOutput saveOverviewMenteesTab(ProgramMenteesTabVO addedVOList, ProgramMenteesTabVO updatedVOList,
			ProgramMenteesTabVO deletedVOList);

	JSONObjectOutput saveOverviewDetailsTab(ProgramDetailsTabVO vo);

	JSONObjectOutput saveOverview(ProgramVO pvo);

	JSONObjectOutput getSupervisedMatchingPage(String programID);

	JSONObjectOutput confirmMatchingResult(String programId, List<MatchedParticipantVO> matchList);

	JSONObjectOutput completeProgram(String programId);

	JSONObjectOutput getProgramList();

	JSONObjectOutput signUpMentors(String programId);

	JSONObjectOutput signUpMentees(String programId);

	JSONObjectOutput startMatching(String programId);

	JSONObjectOutput startProgram(String programId);

	boolean hasMentoringAdminPermission();

	JSONObjectOutput getAllPreferredMentoringUsers(String programId, String mentoringUserId, String mentoringUserType);

	JSONObjectOutput getUserNameByUserIds(String programId, List<String> userIds);
}