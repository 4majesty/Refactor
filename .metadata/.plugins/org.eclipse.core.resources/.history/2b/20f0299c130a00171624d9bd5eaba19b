package com.successfactors.cdp.app.mentoring;

import com.successfactors.cdp.bean.mentoring.MentoringProgram;
import com.successfactors.cdp.bean.mentoring.MentoringProgramEmailTemplate;
import com.successfactors.cdp.bean.mentoring.MentoringProgramMentorRequest;
import com.successfactors.cdp.bean.mentoring.MentoringProgramOwner;
import com.successfactors.cdp.bean.mentoring.MentoringProgramParticipant;
import com.successfactors.cdp.bean.mentoring.MentoringProgramSignupForm;
import com.successfactors.cdp.bean.mentoring.MentoringProgramSignupFormSection;
import com.successfactors.cdp.bean.mentoring.MentoringProgramSignupTemplateSection;
import com.successfactors.cdp.bean.mentoring.vo.ProgramMenteeVO;
import com.successfactors.cdp.bean.mentoring.vo.ProgramMentorVO;
import com.successfactors.cdp.bean.mentoring.vo.ProgramParticipantVO;
import com.successfactors.cdp.bean.mentoring.vo.overview.ProgramDetailsTabVO;
import com.successfactors.cdp.bean.mentoring.vo.overview.ProgramMenteesTabVO;
import com.successfactors.cdp.bean.mentoring.vo.overview.ProgramMentorsTabVO;
import com.successfactors.cdp.service.UpdateMentorUnavailableEndDate;
import com.successfactors.cdp.service.mentoring.GetMatchedParticipants;
import com.successfactors.cdp.service.mentoring.GetMentoringRequest;
import com.successfactors.cdp.service.util.mentoring.MentorRequestStatusEnum;
import com.successfactors.cdp.service.util.mentoring.MentoringConstants;
import com.successfactors.cdp.service.util.mentoring.MentoringDateUtils;
import com.successfactors.cdp.service.util.mentoring.MentoringPermissionChecker;
import com.successfactors.cdp.service.util.mentoring.MentoringProgramMDFException;
import com.successfactors.cdp.service.util.mentoring.MentoringUtils;
import com.successfactors.cdp.service.util.mentoring.ProgramEmailTypeEnum;
import com.successfactors.cdp.service.util.mentoring.ProgramParticipantTypeEnum;
import com.successfactors.cdp.service.util.mentoring.SignupFormStatusEnum;
import com.successfactors.cdp.service.util.mentoring.email.MentoringEmailContent;
import com.successfactors.cdp.service.util.mentoring.email.MentoringEmailTokenEnum;
import com.successfactors.cdp.service.util.mentoring.email.MentoringEmailUtils;
import com.successfactors.genericobject.api.bean.GenericObject;
import com.successfactors.genericobject.api.model.ObjectDefinition;
import com.successfactors.genericobject.api.processor.ValidationContext;
import com.successfactors.genericobject.app.PrefetchFlags;
import com.successfactors.genericobject.app.datamodel.ConfigurationProvider;
import com.successfactors.genericobject.app.proxy.GenericObjectToLazyBean;
import com.successfactors.genericobject.service.LoadByObjectTypeExternalCode;
import com.successfactors.genericobject.service.SaveBean;
import com.successfactors.i18n.service.IMessageBundle;
import com.successfactors.legacy.service.GetSysConfig;
import com.successfactors.legacy.service.ejb.SysConfig;
import com.successfactors.logging.api.LogManager;
import com.successfactors.logging.api.Logger;
import com.successfactors.platform.bean.MailInvalidAddressException;
import com.successfactors.platform.bean.MailSendException;
import com.successfactors.platform.bean.ParamBean;
import com.successfactors.platform.bean.SystemBean;
import com.successfactors.platform.util.Messages;
import com.successfactors.sca.ServiceApplicationException;
import com.successfactors.sca.ServiceCommandHandler;
import com.successfactors.sca.service.ServiceCommandHandlerFactory;
import com.successfactors.user.bean.UserBean;
import com.successfactors.user.bean.util.UserFormatUtils;
import com.successfactors.user.service.FindUsersByIds;
import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;
import javax.inject.Inject;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;

public interface IMentoringServiceBase {
	MentoringProgram getProgramById(String programId) throws ServiceApplicationException;

	MentoringProgramMentorRequest getMentoringRequestById(String requestId) throws ServiceApplicationException;

	void validateContext(ValidationContext context) throws MentoringProgramMDFException;

	MentoringProgramEmailTemplate getEmailTemplateByType(MentoringProgram program, ProgramEmailTypeEnum type);

	<T extends MentoringProgramSignupForm, U extends MentoringProgramParticipant> void saveSignupForm(
			MentoringProgram program, Class<T> clasz, List<U> participants) throws ServiceApplicationException;

	<T extends MentoringProgramParticipant> void sendSignupEmail(MentoringProgram program,
			MentoringProgramEmailTemplate emailTemplate, List<T> participants) throws ServiceApplicationException;

	Map<String, UserBean> getUsernameMapByIds(List<String> userIdList) throws ServiceApplicationException;

	<T extends MentoringProgramSignupForm, U extends MentoringProgramParticipant> void autoDeclineParticipants(
			Class<T> clasz, List<U> participants, boolean draftOnly) throws ServiceApplicationException;

	void sendMatchedEmailToMentor(MentoringProgram program, String mentorId, List<String> mentees)
			throws ServiceApplicationException;

	void sendMatchedEmailToMentee(MentoringProgram program, String mentorId, String menteeId)
			throws ServiceApplicationException;

	void sendDeclineEmail(MentoringProgram program, String menteeId, String comment) throws ServiceApplicationException;

	void sendMatchingRequestEmail(MentoringProgram program, Map<String, Set<String>> mentorMenteeMap)
			throws ServiceApplicationException;

	boolean isMentorAvailable(String programId, String mentorId) throws ServiceApplicationException;

	void assignPropertyValueFromVO(MentoringProgram program, ProgramDetailsTabVO vo) throws ServiceApplicationException;

	void saveOverviewMenteesTabChange(MentoringProgram program, ProgramMenteesTabVO addedVOList,
			ProgramMenteesTabVO updateVOList, ProgramMenteesTabVO deletedVOList) throws ServiceApplicationException;

	void saveOverviewMentorsTabChange(MentoringProgram program, ProgramMentorsTabVO addedVOList,
			ProgramMentorsTabVO updatedVOList, ProgramMentorsTabVO deletedVOList) throws ServiceApplicationException;

	void declineUnprocessedRequests(MentoringProgram program) throws ServiceApplicationException;

	int declineUnmatchedParticipants(MentoringProgram program) throws ServiceApplicationException;

	boolean isTroubleShootingModeEnabled();

	Map<ProgramParticipantTypeEnum, Set<String>> getProgramMatchedParticipantCount(MentoringProgram program);

	String getMessageByLocale(String messageKey, Locale locale);

	Messages getMessageBundleByLocale(Locale locale);

	String getLocalizedUserFullName(UserBean userBean);
}